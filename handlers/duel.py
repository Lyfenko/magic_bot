import random
from aiogram import Router, F
from aiogram.types import CallbackQuery
from keyboards.inline import get_duel_menu

router = Router()

player_health = 100
opponent_health = 100
player_points = 0

DUEL_ACTIONS = {
    "attack": "‚öîÔ∏è –í–∏ –∞—Ç–∞–∫—É–≤–∞–ª–∏!",
    "defend": "üõ°Ô∏è –í–∏ –∑–∞—Ö–∏—Å—Ç–∏–ª–∏—Å—è!",
    "special_attack": "‚ö° –í–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ –°–ø–µ—Ü. –ê—Ç–∞–∫—É!"
}


@router.callback_query(F.data.in_(DUEL_ACTIONS.keys()))
async def duel_callback(callback: CallbackQuery):
    global player_health, opponent_health, player_points
    action = callback.data
    message = ""

    if action == "attack":
        damage = random.randint(15, 25)
        opponent_health -= damage
        player_points += 10
        message = (
            DUEL_ACTIONS[action] +
            f"\n‚öîÔ∏è –í–∏ –∑–∞–≤–¥–∞–ª–∏ {damage} —à–∫–æ–¥–∏ —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É." +
            f"\nüèÜ –û—á–∫–∏: {player_points}" +
            f"\n–í–∞—à–µ –∑–¥–æ—Ä–æ–≤'—è: {player_health}" +
            f"\n–ó–¥–æ—Ä–æ–≤'—è —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {opponent_health}"
        )

    elif action == "defend":
        reduced_damage = random.randint(5, 10)
        player_health -= max(0, reduced_damage - 5)
        message = (
            DUEL_ACTIONS[action] +
            f"\nüõ°Ô∏è –í–∏ –∑–º–µ–Ω—à–∏–ª–∏ —à–∫–æ–¥—É –¥–æ {reduced_damage}." +
            f"\n–í–∞—à–µ –∑–¥–æ—Ä–æ–≤'—è: {player_health}" +
            f"\n–ó–¥–æ—Ä–æ–≤'—è —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {opponent_health}"
        )
    elif action == "special_attack":
        player_health -= 10
        opponent_health -= 30
        player_points += 20
        message = (
            DUEL_ACTIONS[action] +
            f"\n‚ö° –í–∏ –∑–∞–≤–¥–∞–ª–∏ 30 —à–∫–æ–¥–∏, –∞–ª–µ –≤—Ç—Ä–∞—Ç–∏–ª–∏ 10 –∑–¥–æ—Ä–æ–≤'—è." +
            f"\nüèÜ –û—á–∫–∏: {player_points}" +
            f"\n–í–∞—à–µ –∑–¥–æ—Ä–æ–≤'—è: {player_health}" +
            f"\n–ó–¥–æ—Ä–æ–≤'—è —Å—É–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {opponent_health}"
        )

    if player_health <= 0:
        message += "\nüíÄ –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏ –¥—É–µ–ª—å! –ü–æ—á–Ω—ñ—Ç—å –Ω–æ–≤—É –≥—Ä—É."
        reset_game()
    elif opponent_health <= 0:
        message += "\nüèÜ –í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏ –¥—É–µ–ª—å! –û—á–∫–∏ –¥–æ–¥–∞—é—Ç—å—Å—è –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Ö—É–Ω–∫—É."
        reset_game()
    else:
        await callback.message.edit_text(message, reply_markup=get_duel_menu())

    await callback.answer()


@router.callback_query(F.data == "start_duel")
async def start_duel(callback: CallbackQuery):
    reset_game()
    await callback.message.edit_text("–î—É–µ–ª—å –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è! –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à—É –¥—ñ—é:", reply_markup=get_duel_menu())
    await callback.answer()


def reset_game():
    global player_health, opponent_health
    player_health = 100
    opponent_health = 100
